{"version":3,"sources":["../scripts/script.js"],"names":["VideosMainPage","container","document","querySelector","Promise","resolve","reject","xhr","XMLHttpRequest","onload","JSON","parse","response","onerror","open","send","parsedResults","proofTwo","console","log","created","date","Date","now","year","years","yearsRounded","Math","floor","concat","toString","month","months","monthsRounded","week","weeks","weeksRounded","day","days","daysRounded","hour","hours","hoursRounded","duration","min","sec","id","title","dur","age","poster","newbox","createElement","classList","add","href","thumb","src","appendChild","ptime","ptimetext","createTextNode","ptitle","ptitletext","page","pagetext","data","videos","forEach","video","parsedObj","parseAge","length","parseDur","categories","category","catBox","catBoxTitle","actualTitle","cv","createVideoElement","addEventListener","load","then","result","catch"],"mappings":"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","file":"script.js","sourcesContent":["class VideosMainPage {\r\n  constructor() {\r\n    this.container = document.querySelector('body');\r\n  }\r\n\r\n  // Einhverskonar startup fall\r\n  load() {\r\n    // Dæmi um hvernig mætti nota hrátt callback. Skil eftir ef ske kynni\r\n    // við vildum frekar nota það.\r\n    /*  const request = new XMLHttpRequest();\r\n      request.open('GET', 'videos.json', true);\r\n      request.onload = function() {\r\n        if (request.status >= 200 && request.status < 400) {\r\n\r\n          const data = JSON.parse(request.response);\r\n          console.log(data);\r\n        } else {\r\n          console.error('Villa', request);\r\n        }\r\n      };\r\n\r\n      request.onerror = function() {\r\n        console.error('Óþekkt villa');\r\n      };\r\n\r\n      request.send();\r\n    */\r\n\r\n    // Dæmi #2 um hvernig hægt er að ná í JSON gögn með asynchronous hætti,\r\n    // í þetta sinn með promises. Aðeins ítarlegra en það sem ég endaði á að\r\n    // nota, skil það eftir ef við endum á að vilja frekar nota þessa aðferð.\r\n    /*\r\n      var request = new Request('videos.json', { method: 'GET' });\r\n      fetch(request)\r\n        .then(function(response) {\r\n          if (response.status === 200) {\r\n            return response.json();\r\n          }\r\n          throw new Error('Something went wrong on api server!');\r\n        })\r\n        .then(function(response) {\r\n          // console.log(response);\r\n          return response;\r\n        })\r\n        .catch(function(error) {\r\n          console.error(error);\r\n        });\r\n     */\r\n\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      //Búum til private breytu sem geymir rétt scope á this...\r\n      //const that = this;\r\n      //console.log(that);\r\n      //...sendum svo hana í onload og notum hana í JSON.parse\r\n      //xhr.onload = (that) => {\r\n      //Virkaði samt ekki án þess að kasta villu í npm. Notum lambda fall\r\n      //rétt á meðan við erum að klára aðra virkni.\r\n      xhr.onload = function() {\r\n          resolve(JSON.parse(this.response));\r\n      };\r\n      xhr.onerror = reject;\r\n      xhr.open('GET', 'videos.json');\r\n      xhr.send();\r\n    });\r\n  }\r\n\r\n  // Throwaway fall til að sýna hvernig við náum gögnum úr asynchronous\r\n  // promise til að vinna svo með gögnin\r\n  proofOfConcept(parsedResults) {\r\n    // console.log(parsedResults);\r\n    this.proofTwo(parsedResults);\r\n  }\r\n\r\n  // Annað throwaway til að sýna hvernig við hendum gögnum milli falla.\r\n  proofTwo(parse) {\r\n    console.log(parse);\r\n  }\r\n\r\n  // Fall sem tekur við created tíma og spýtir út aldursstreng\r\n  parseAge(created) {\r\n    const date = new Date(created);\r\n    const now = new Date();\r\n    const year = 365 * 24 * 60 * 60 * 1000;\r\n    if (now - date >= year) {\r\n      const years = (now - date) / year;\r\n      //Kippti út years === 1 svo Math.floor(years) skili ekki áfram 1\r\n      //ef við erum í t.d. 1.9999.\r\n      //(Það er alveg til umræðu hvort við viljum vera að rúnna niður með\r\n      //Math.floor() yfirhöfuð; mér finnst það eðlilegast og tel það gera fyrir\r\n      //sem einfaldastan kóða, en við gætum farið aðrar leiðir)\r\n      if ( (years >= 1) && (years < 2) ) {\r\n        return 'Fyrir 1 ári síðan';\r\n      }\r\n      const yearsRounded = Math.floor(years);\r\n      return 'Fyrir '.concat(yearsRounded.toString(), ' árum síðan');\r\n    }\r\n    const month = 30 * 24 * 60 * 60 * 1000;\r\n    if (now - date >= month) {\r\n      const months = (now - date) / month;\r\n      if ( (months >= 1) && (months < 2) ) {\r\n        return 'Fyrir 1 mánuði síðan';\r\n      }\r\n      const monthsRounded = Math.floor(months);\r\n      return 'Fyrir '.concat(monthsRounded.toString(), ' mánuðum síðan');\r\n    }\r\n    const week = 7 * 24 * 60 * 60 * 1000;\r\n    if (now - date >= week) {\r\n      const weeks = (now - date) / week;\r\n      if ( (weeks >= 1) && (weeks < 2) ) {\r\n        return 'Fyrir 1 viku síðan';\r\n      }\r\n      const weeksRounded = Math.floor(weeks);\r\n      return 'Fyrir '.concat(weeksRounded.toString(), ' vikum síðan');\r\n    }\r\n    const day = 24 * 60 * 60 * 1000;\r\n    if (now - date > day) {\r\n      const days = (now - date) / day;\r\n      if ( (days >= 1) && (days < 2) ) {\r\n        return 'Fyrir 1 degi síðan';\r\n      }\r\n      const daysRounded = Math.floor(days);\r\n      return 'Fyrir '.concat(daysRounded.toString(), ' dögum síðan');\r\n    }\r\n    const hour = 60 * 60 * 1000;\r\n    const hours = (now - date) / hour;\r\n    if (hours < 1) {\r\n      return 'Fyrir minna en klukkustund síðan';\r\n    } else if ( (hours >= 1) && (hours < 2) ) {\r\n      return 'Fyrir 1 klukkustund síðan';\r\n    }\r\n    const hoursRounded = Math.floor(hours);\r\n    return 'Fyrir '.concat(hoursRounded.toString(), ' klukkustundum síðan');\r\n  }\r\n\r\n  // Fall sem tekur við duration of spýtir út lengdarstreng\r\n  parseDur(duration) {\r\n    const min = duration / 60;\r\n    const sec = duration % 60;\r\n    return toString(min).concat(':', toString(sec));\r\n  }\r\n\r\n  // Fall sem býr til eitt div utan um vídeo með aldri, tíma, titli etc.\r\n  // Kalla þarf á parseföll utan þess falls, þetta tekur við parsed gildum\r\n  createVideoElement(id, title, dur, age, poster) {\r\n    const newbox = document.createElement('a');\r\n    newbox.classList.add('videobox');\r\n    newbox.href = '/video.html/?id='.concat(toString(id));\r\n    const thumb = document.createElement('img');\r\n    thumb.classList.add('videobox__img');\r\n    thumb.src = poster;\r\n    newbox.appendChild(thumb);\r\n    const ptime = document.createElement('p');\r\n    ptime.classList.add('videobox__time');\r\n    const ptimetext = document.createTextNode(dur);\r\n    ptime.appendChild(ptimetext);\r\n    newbox.appendChild(ptime);\r\n    const ptitle = document.createElement('p');\r\n    ptitle.classList.add('videobox__title');\r\n    const ptitletext = document.createTextNode(title);\r\n    ptitle.appendChild(ptitletext);\r\n    newbox.appendChild(ptitle);\r\n    const page = document.createElement('p');\r\n    page.classList.add('videobox__age');\r\n    const pagetext = document.createTextNode(age);\r\n    page.appendChild(pagetext);\r\n    newbox.appendChild(page);\r\n    return newbox;\r\n  }\r\n\r\n  // Grunnfall sem tekur parsaða JSON skrána og fer að deila því\r\n  // út í myndbandsflokka og einstaka vídeó.\r\n  parse(data) {\r\n    const videos = {};\r\n    data.videos.forEach((video) => {\r\n      const parsedObj = {};\r\n      parsedObj.id = video.id;\r\n      parsedObj.title = video.title;\r\n      parsedObj.age = this.parseAge(video.created);\r\n      parsedObj.length = this.parseDur(video.duration);\r\n      parsedObj.thumb = video.poster;\r\n      videos[video.id] = parsedObj;\r\n    });\r\n    data.categories.forEach((category) => {\r\n      const catBox = document.createElement('section');\r\n      catBox.classList.add('videocat');\r\n      const catBoxTitle = document.createElement('h2');\r\n      catBoxTitle.classList.add('videocat__title');\r\n      const actualTitle = document.createTextNode(category.title);\r\n      catBoxTitle.appendChild(actualTitle);\r\n      catBox.appendChild(catBoxTitle);\r\n      category.videos.forEach((video) => {\r\n        const cv = videos[video];\r\n        catBox.appendChild(this.createVideoElement(cv.id, cv.title, cv.length, cv.dur, cv.thumb));\r\n      });\r\n\r\n      this.container.appendChild(catBox);\r\n    });\r\n  }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const videos = new VideosMainPage();\r\n\r\n  videos.load()\r\n    .then((result) => {\r\n      // videos.proofOfConcept(result);\r\n      //console.log(result);\r\n      videos.parse(result);\r\n    })\r\n    .catch(() => {\r\n      // Bregðast við villu hérna.\r\n    });\r\n});\r\n"]}